<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="393" />
    <option name="newTranslationDialogWidth" value="889" />
    <option name="newTranslationDialogX" value="520" />
    <option name="newTranslationDialogY" value="450" />
    <histories>
      <item value="e" />
      <item value="The target name of the configured property as defined by the JavaBeans specification. The same target property must not be mapped more than once. If used to map an enum constant, the name of the constant member is to be given. In this case, several values from the source enum may be mapped to the same value of the target enum." />
      <item value="Indicates that the persistence provider must assign primary keys for the entity using a database identity column." />
      <item value="Indicates that the persistence provider should pick an appropriate strategy for the particular database. The AUTO generation strategy may expect a database resource to exist, or it may attempt to create one. A vendor may provide documentation on how to create such resources in the event that it does not support schema generation or cannot create the schema resource at runtime." />
      <item value="Abstract adapter class for the AsyncHandlerInterceptor interface, for simplified implementation of pre-onlypost-only interceptors. 已弃用 as of 5.3 in favor of implementing HandlerInterceptor andor AsyncHandlerInterceptor directly. 自: 05.12.2003 作者: Juergen Hoeller" />
      <item value="Whether the browser should send credentials, such as cookies along with cross domain requests, to the annotated endpoint. The configured value is set on the Access-Control-Allow-Credentials response header of preflight requests. NOTE: Be aware that this option establishes a high level of trust with the configured domains and also increases the surface attack of the web application by exposing sensitive user-specific information such as cookies and CSRF tokens. By default this is not set in which case the Access-Control-Allow-Credentials header is also not set and credentials are therefore not allowed." />
      <item value="The plugin reduces overall indexing time and CPU usage by using custom-built project shared indexes For more details, see the detailed instructions and documentations" />
      <item value="JetBrains Space: An all-in-one solution for software teams and projects Cover the entire software development pipeline, project and team management, and communication. Host Git repositories, review code, automate your CICD, store and publish packages, manage issues and documents, and communicate with your team in chats. Explore Space and sign up for free Connect your IDE to your organization in Space. This allows you to clone and share Git repositories, perform code reviews with merge requests, edit Automation scripts with Kotlin plugin support, track an automation job’s progress, and more." />
      <item value="Qodana: The code quality platform for your favorite CI Qodana is a code quality monitoring platform that brings into your CICD pipelines all the smart features you love in the JetBrains IDEs as well as project-level checks like clone detection and license audit. Explore Qodana The plugin provides a link between a Qodana and your project opened in an IDE: Open Qodana static analysis SARIF report and view the issues detected by a Qodana linter Use the &quot;Open in IDE&quot; functionality provided by the Qodana UI" />
      <item value="Intelligent spelling and grammar checks for any text you write in the IDE. Supports over 20 languages, including English, German, Russian, and Chinese. English is enabled by default. To add other languages, open SettingsPreferences | Editor | Natural Languages. Works with natural languages in programming language constructs (Python, Java, and others), markup languages (Markdown, HTML, XML, and others), comments, and commit messages. Uses LanguageTool as its proofreading engine. Data privacy: all verification is performed locally, inside your IDE." />
      <item value="Provides base features for Java EEJakarta EE technologies: artifacts, dedicated tool window and project templates." />
      <item value="Provides a possibility to evaluate XPath expressions against any XML document opened in IDEA. It can also generate and show an XPath expression that matches the current node. Adds syntax highlighting, analysis, completion, navigation and refactoring of XPath expressions and named templates for XSLT documents." />
      <item value="Constructs a Time object using a milliseconds time value. 形参: time – milliseconds since January 1, 1970, 00:00:00 GMT; a negative number is milliseconds before January 1, 1970, 00:00:00 GMT" />
      <item value="Returns, if this stream is ordered, a stream consisting of the remaining elements of this stream after dropping the longest prefix of elements that match the given predicate. Otherwise returns, if this stream is unordered, a stream consisting of the remaining elements of this stream after dropping a subset of elements that match the given predicate. If this stream is ordered then the longest prefix is a contiguous sequence of elements of this stream that match the given predicate. The first element of the sequence is the first element of this stream, and the element immediately following the last element of the sequence does not match the given predicate. If this stream is unordered, and some (but not all) elements of this stream match the given predicate, then the behavior of this operation is nondeterministic; it is free to drop any subset of matching elements (which includes the empty set). Independent of whether this stream is ordered or unordered if all elements of this stream match the given predicate then this operation drops all elements (the result is an empty stream), or if no elements of the stream match the given predicate then no elements are dropped (the result is the same as the input)." />
      <item value="The custom pattern to use to format the field or method parameter. Defaults to empty String, indicating no custom pattern String has been specified. Set this attribute when you wish to format your field or method parameter in accordance with a custom date time pattern not represented by a style or ISO format. Note: This pattern follows the original java.text.SimpleDateFormat style, as also supported by Joda-Time, with strict parsing semantics towards overflows (e.g. rejecting a Feb 29 value for a non-leap-year). As a consequence, 'yy' characters indicate a year in the traditional style, not a &quot;year-of-era&quot; as in the java.time.format.DateTimeFormatter specification (i.e. 'yy' turns into 'uu' when going through a DateTimeFormatter with strict resolution mode)." />
      <item value="The annotated element has to be in the appropriate range. Apply on numeric values or string representation of the numeric value." />
      <item value="Note that double and float are not supported due to rounding errors (some providers might provide some approximative support)." />
      <item value="The annotated element must be a number whose value must be higher or equal to the specified minimum. Supported types are: BigDecimal BigInteger byte, short, int, long, and their respective wrappers Note that double and float are not supported due to rounding errors (some providers might provide some approximative support). null elements are considered valid. 作者: Emmanuel Bernard" />
      <item value="Marks a property, method parameter or method return type for validation cascading. Constraints defined on the object and its properties are validated when the property, method parameter or method return type is validated." />
      <item value="Declares a field as the one representing the date the entity containing the field was created." />
      <item value="If put on a parameter, lombok will insert a null-check at the start of the method constructor's body, throwing a NullPointerException with the parameter's name as message. If put on a field, any generated method assigning a value to this field will also produce these null-checks." />
      <item value="Generates a constructor with required arguments. Required arguments are final fields and fields with constraints such as @NonNull. Complete documentation is found at the project lombok features page for @Constructor . Even though it is not listed, this annotation also has the onConstructor parameter. See the full documentation for more details." />
      <item value="Generates getters for all fields, a useful toString method, and hashCode and equals implementations that check all non-transient fields. Will also generate setters for all non-final fields, as well as a constructor. Equivalent to @Getter @Setter @RequiredArgsConstructor @ToString @EqualsAndHashCode." />
      <item value="Class Object is the root of the class hierarchy. Every class has Object as a superclass. All objects, including arrays, implement the methods of this class." />
      <item value="Retrieves an entity by its id. 形参: id – must not be null. 返回值: the entity with the given id or Optionalempty() if none found." />
      <item value="Log a message at the INFO level according to the specified format and argument. This form avoids superfluous object creation when the logger is disabled for the INFO level." />
      <item value="Returns a string that is a substring of this string. The substring begins with the character at the specified index and extends to the end of this string." />
      <item value="Check whether the given String contains actual text. More specifically, this method returns true if the String is not null, its length is greater than 0, and it contains at least one non-whitespace character." />
      <item value="Requests that the file or directory denoted by this abstract pathname be deleted when the virtual machine terminates. Files (or directories) are deleted in the reverse order that they are registered. Invoking this method to delete a file or directory that is already registered for deletion has no effect. Deletion will be attempted only for normal termination of the virtual machine, as defined by the Java Language Specification. Once deletion has been requested, it is not possible to cancel the request. This method should therefore be used with care. Note: this method should not be used for file-locking, as the resulting protocol cannot be made to work reliably. The FileLock facility should be used instead." />
      <item value="Code shared by String and StringBuffer to do searches. The source is the character array being searched, and the target is the string being searched for." />
      <item value="Returns an array containing all of the elements in this set; the runtime type of the returned array is that of the specified array. If the set fits in the specified array, it is returned therein. Otherwise, a new array is allocated with the runtime type of the specified array and the size of this set. If this set fits in the specified array with room to spare (i.e., the array has more elements than this set), the element in the array immediately following the end of the set is set to null. (This is useful in determining the length of this set only if the caller knows that this set does not contain any null elements.) If this set makes any guarantees as to what order its elements are returned by its iterator, this method must return the elements in the same order. Like the toArray() method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs. Suppose x is a set known to contain only strings. The following code can be used to dump the set into a newly allocated array of String: String[] y = x.toArray(new String[0]); Note that toArray(new Object[0]) is identical in function to toArray()." />
      <item value="Writes b.length bytes from the specified byte array to this output stream. The general contract for write(b) is that it should have exactly the same effect as the call write(b, 0, b.length)." />
      <item value="Flushes this output stream and forces any buffered output bytes to be written out. The general contract of flush is that calling it is an indication that, if any bytes previously written have been buffered by the implementation of the output stream, such bytes should immediately be written to their intended destination. If the intended destination of this stream is an abstraction provided by the underlying operating system, for example a file, then flushing the stream guarantees only that bytes previously written to the stream are passed to the operating system for writing; it does not guarantee that they are actually written to a physical device such as a disk drive. The flush method of OutputStream does nothing." />
      <item value="Removes all of the elements from this set (optional operation). The set will be empty after this call returns." />
      <item value="Ensure that a memory based package part does not have lingering data from previous commit() calls. Note: This is overwritten for some objects, as PictureData seem to store the actual content in the part directly without keeping a copy like all others therefore we need to handle them differently." />
      <item value="Sets the content type of the response being sent to the client, if the response has not been committed yet. The given content type may include a character encoding specification, for example, texthtml;charset=UTF-8. The response's character encoding is only set from the given content type if this method is called before getWriter is called. This method may be called repeatedly to change content type and character encoding. This method has no effect if called after the response has been committed. It does not set the response's character encoding if it is called after getWriter has been called or after the response has been committed. Containers must communicate the content type and the character encoding used for the servlet response's writer to the client if the protocol provides a way for doing so. In the case of HTTP, the Content-Type header is used." />
      <item value="set Header" />
      <item value="Decodes a Base64 encoded String into a newly-allocated byte array using the Base64 encoding scheme. An invocation of this method has exactly the same effect as invoking decode(src.getBytes(StandardCharsets.ISO_8859_1))" />
      <item value="Returns a stream consisting of the results of applying the given function to the elements of this stream." />
      <item value="Returns an LongStream consisting of the results of replacing each element of this stream with the contents of a mapped stream produced by applying the provided mapping function to each element. Each mapped stream is closed after its contents have been placed into this stream. (If a mapped stream is null an empty stream is used, instead.)" />
      <item value="For parallel stream pipelines, the action may be called at whatever time and in whatever thread the element is made available by the upstream operation. If the action modifies shared state, it is responsible for providing the required synchronization." />
      <item value="parallel" />
      <item value="consisting" />
      <item value="Returns a stream consisting of the elements of this stream, additionally performing the provided action on each element as elements are consumed from the resulting stream. This is an intermediate operation. For parallel stream pipelines, the action may be called at whatever time and in whatever thread the element is made available by the upstream operation. If the action modifies shared state, it is responsible for providing the required synchronization." />
      <item value="Sends an error response to the client using the specified status code and clears the output buffer. The server defaults to creating the response to look like an HTML-formatted server error page containing the specified message, setting the content type to &quot;texthtml&quot;, leaving cookies and other headers unmodified. If an error-page declaration has been made for the web application corresponding to the status code passed in, it will be served back in preference to the suggested msg parameter. If the response has already been committed, this method throws an IllegalStateException. After using this method, the response should be considered to be committed and should not be written t" />
      <item value="Atomically creates a new, empty file named by this abstract pathname if and only if a file with this name does not yet exist. The check for the existence of the file and the creation of the file if it does not exist are a single operation that is atomic with respect to all other filesystem activities that might affect the file. Note: this method should not be used for file-locking, as the resulting protocol cannot be made to work reliably. The FileLock facility should be used instead." />
      <item value="Returns a reference to the entity with the given identifier. Depending on how the JPA persistence provider is implemented this is very likely to always return an instance and throw an javax.persistence.EntityNotFoundException on first access. Some of them will reject invalid identifiers immediately." />
      <item value="Datasource name to use if &quot;generate-unique-name&quot; is false. Defaults to &quot;testdb&quot; when using an embedded database, otherwise null." />
      <item value="Cannot resolve configuration property 'spring.datasource.dm.driver-class-name'" />
      <item value="Accepts a function that extracts a sort key from a type T, and returns a Comparator that compares by that sort key using the specified Comparator. The returned comparator is serializable if the specified function and comparator are both serializable." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="74" />
        <entry key="ENGLISH" value="68" />
        <entry key="ALBANIAN" value="1" />
        <entry key="PORTUGUESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1656310467175" />
  </component>
</application>
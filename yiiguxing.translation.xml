<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="393" />
    <option name="newTranslationDialogWidth" value="889" />
    <option name="newTranslationDialogX" value="520" />
    <option name="newTranslationDialogY" value="450" />
    <histories>
      <item value="Deletes the file or directory denoted by this abstract pathname. If this pathname denotes a directory, then the directory must be empty in order to be deleted. Note that the java.nio.file.Files class defines the delete method to throw an IOException when a file cannot be deleted. This is useful for error reporting and to diagnose why a file cannot be deleted." />
      <item value="Copy the property values of the given source bean into the target bean. Note: The source and target classes do not have to match or even be derived from each other, as long as the properties match. Any bean properties that the source bean exposes but the target bean does not will silently be ignored. This is just a convenience method. For more complex transfer needs, consider using a full BeanWrapper. 形参: source – the source bean target – the target bean 抛出: BeansException – if the copying failed" />
      <item value="Requires the currently executing Subject to have all of the specified roles. If they do not have the role(s), the method will not be executed and an AuthorizationException is thrown. For example, @RequiresRoles(&quot;aRoleName&quot;); void someMethod(); means someMethod() could only be executed by subjects who have been assigned the 'aRoleName' role. Usage Note: Be careful using this annotation if your application has a dynamic security model where roles can be added and deleted at runtime. If your application allowed the annotated role to be deleted during runtime, the method would not be able to be executed by anyone (at least until a new role with the same name was created again). If you require such dynamic functionality, only the RequiresPermissions annotation makes sense - Permission types will not change during runtime for an application since permissions directly correspond to how the application's functionality is programmed (that is, they reflect the application's functionality only, not who is executing the the functionality)." />
      <item value="Reads up to b.length bytes of data from this input stream into an array of bytes. This method blocks until some input is available." />
      <item value="Returns the credentials associated with the corresponding Subject. A credential verifies one or more of the principals associated with the Subject, such as a password or private key. Credentials are used by Shiro particularly during the authentication process to ensure that submitted credentials during a login attempt match exactly the credentials here in the AuthenticationInfo instance. 返回值: the credentials associated with the corresponding Subject." />
      <item value="Indicates a query method should be considered as modifying query as that changes the way it needs to be executed. This annotation is only considered if used on query methods defined through a Query annotation. It's not applied on custom implementation methods or queries derived from the method name as they already have control over the underlying data access APIs or specify if they are modifying by their name. Queries that require a `@Modifying` annotation include INSERT, UPDATE, DELETE, and DDL statements." />
      <item value="Specify the selection items that are to be returned in the query result. Replaces the previously specified selection(s), if any. The type of the result of the query execution depends on the specification of the type of the criteria query object created as well as the arguments to the multiselect method. &lt;p&gt; An argument to the multiselect method must not be a tuple- or array-valued compound selection item. &lt;p&gt;The semantics of this method are as follows: &lt;ul&gt; &lt;li&gt; If the type of the criteria query is &lt;code&gt;CriteriaQuery&amp;060;Tuple&amp;062;&lt;code&gt; (i.e., a criteria query object created by either the &lt;code&gt;createTupleQuery&lt;code&gt; method or by passing a &lt;code&gt;Tuple&lt;code&gt; class argument to the &lt;code&gt;createQuery&lt;code&gt; method), a &lt;code&gt;Tuple&lt;code&gt; object corresponding to the arguments of the &lt;code&gt;multiselect&lt;code&gt; method, in the specified order, will be instantiated and returned for each row that results from the query execution. &lt;li&gt; If the type of the criteria query is &lt;code&gt;CriteriaQuery&amp;060;X&amp;062;&lt;code&gt; for some user-defined class X (i.e., a criteria query object created by passing a X class argument to the &lt;code&gt;createQuery&lt;code&gt; method), the arguments to the &lt;code&gt;multiselect&lt;code&gt; method will be passed to the X constructor and an instance of type X will be returned for each row. &lt;li&gt; If the type of the criteria query is &lt;code&gt;CriteriaQuery&amp;060;X[]&amp;062;&lt;code&gt; for some class X, an instance of type X[] will be returned for each row. The elements of the array will correspond to the arguments of the &lt;code&gt;multiselect&lt;code&gt; method, in the specified order. &lt;li&gt; If the type of the criteria query is &lt;code&gt;CriteriaQuery&amp;060;Object&amp;062;&lt;code&gt; or if the criteria query was created without specifying a type, and only a single argument is passed to the &lt;code&gt;multiselect&lt;code&gt; method, an instance of type &lt;code&gt;Object&lt;code&gt; will be returned for each row. &lt;li&gt; If the type of the criteria query is &lt;code&gt;CriteriaQuery&amp;060;Object&amp;062;&lt;code&gt; or if the criteria query was created without specifying a type, and more than one argument is passed to the &lt;code&gt;multiselect&lt;code&gt; method, an instance of type &lt;code&gt;Object[]&lt;code&gt; will be instantiated and returned for each row. The elements of the array will correspond to the arguments to the &lt;code&gt; multiselect&lt;code&gt; method, in the specified order." />
      <item value="Specify the selection items that are to be returned in the query result. Replaces the previously specified selection(s), if any. The type of the result of the query execution depends on the specification of the type of the criteria query object created as well as the arguments to the multiselect method. &lt;p&gt; An argument to the multiselect method must not be a tuple- or array-valued compound selection item." />
      <item value="Specify the item that is to be returned in the query result. Replaces the previously specified selection(s), if any. Note: Applications using the string-based API may need to specify the type of the select item when it results from a get or join operation and the query result type is specified." />
      <item value="The maximum number of results the query object was set to retrieve. Returns Integer.MAX_VALUE if setMaxResults was not applied to the query object." />
      <item value="Set the maximum number of results to retrieve" />
      <item value="Remove the indicated Trigger from the scheduler. If the related job does not have any other triggers, and the job is not durable, then the job will also be deleted." />
      <item value="Whether or not the Job should remain stored after it is orphaned (no Triggers point to it). If not explicitly set, the default value is false - this method sets the value to true." />
      <item value="Set the time the Trigger should start at to the current moment - the trigger may or may not fire at this time - depending upon the schedule configured for the Trigger." />
      <item value="Set the time the Trigger should start at - the trigger may or may not fire at this time - depending upon the schedule configured for the Trigger. However the Trigger will NOT fire before this time, regardless of the Trigger's schedule. 形参: triggerStartTime – the start time for the Trigger." />
      <item value="A constant Trigger group name used internally by the scheduler - clients should not use the value of this constant (&quot;FAILED_OVER_JOBS&quot;) for the name of a Trigger's group." />
      <item value="A constant Trigger group name used internally by the scheduler - clients should not use the value of this constant (&quot;RECOVERING_JOBS&quot;) for the name of a Trigger's group." />
      <item value="A (possibly) useful constant that can be used for specifying the group that Job and Trigger instances belong to." />
      <item value="A constant JobDataMap key that can be used to retrieve the group of the original Trigger from a recovery trigger's data map in the case of a job recovering after a failed scheduler instance." />
      <item value="A qualifier can be specified to aid the selection process of a suitable mapper. This is useful in case multiple mapping methods (hand written or generated) qualify and thus would result in an 'Ambiguous mapping methods found' error. A qualifier is a custom annotation and can be placed on a hand written mapper class or a method. Note that defaultValue() usage will also be converted using this qualifier. 返回值: the qualifiers" />
      <item value="Whether the property specified via target() should be ignored by the generated mapping method or not. This can be useful when certain attributes should not be propagated from source or target or when properties in the target object are populated using a decorator and thus would be reported as unmapped target property by default. 返回值: true if the given property should be ignored, false" />
      <item value="The target name of the configured property as defined by the JavaBeans specification. The same target property must not be mapped more than once. If used to map an enum constant, the name of the constant member is to be given. In this case, several values from the source enum may be mapped to the same value of the target enum." />
      <item value="Set the time the Trigger should start at - the trigger may or may not fire at this time - depending upon the schedule configured for the Trigger. However the Trigger will NOT fire before this time, regardless of the Trigger's schedule." />
      <item value="General-purpose annotation used for configuring details of how values of properties are to be serialized. Unlike most other Jackson annotations, annotation does not have specific universal interpretation: instead, effect depends on datatype of property being annotated (or more specifically, deserializer and serializer being used). Common uses include choosing between alternate representations -- for example, whether java.util.Date is to be serialized as number (Java timestamp) or String (such as ISO-8601 compatible time value) -- as well as configuring exact details with pattern property. As of Jackson 2.6, known special handling includes: java.util.Date: Shape can be JsonFormat.Shape.STRING or JsonFormat.Shape.NUMBER; pattern may contain java.text.SimpleDateFormat-compatible pattern definition. Can be used on Classes (types) as well, for modified default behavior, possibly overridden by per-property annotation Enums: Shapes JsonFormat.Shape.STRING and JsonFormat.Shape.NUMBER can be used to change between numeric (index) and textual (name or toString()); but it is also possible to use JsonFormat.Shape.OBJECT to serialize (but not deserialize) Enums as JSON Objects (as if they were POJOs). NOTE: serialization as JSON Object only works with class annotation; will not work as per-property annotation. java.util.Collections can be serialized as (and deserialized from) JSON Objects, if JsonFormat.Shape.OBJECT is used. NOTE: can ONLY be used as class annotation; will not work as per-property annotation. Number subclasses can be serialized as full objects if JsonFormat.Shape.OBJECT is used. Otherwise the default behavior of serializing to a scalar number value will be preferred. NOTE: can ONLY be used as class annotation; will not work as per-property annotation." />
      <item value="Create a disjunction of the given restriction predicates. A disjunction of zero predicates is false." />
      <item value="The simple names of the possible enum values for an expression with the annotated type. 返回值: the simple names of the possible enum values for an expression with the annotated typ" />
      <item value="An annotation indicating the possible values for an enum type. If an expression's type has this annotation, then at run time, the expression evaluates to one of the enum values named by the arguments. EnumVal uses the simple name of the enum value: the EnumVal type corresponding to MyEnum.MY_VALUE is @EnumVal(&quot;MY_VALUE&quot;). This annotation is treated as StringVal internally by the Constant Value Checker. checker_framework.manual constant-value-checker Constant Value Checker" />
      <item value="A convenience class to represent name-value pairs." />
      <item value="This is the central class in the JDBC core package. It simplifies the use of JDBC and helps to avoid common errors. It executes core JDBC workflow, leaving application code to provide SQL and extract results. This class executes SQL queries or updates, initiating iteration over ResultSets and catching JDBC exceptions and translating them to the generic, more informative exception hierarchy defined in the org.springframework.dao package. Code using this class need only implement callback interfaces, giving them a clearly defined contract. The PreparedStatementCreator callback interface creates a prepared statement given a Connection, providing SQL and any necessary parameters. The ResultSetExtractor interface extracts values from a ResultSet. See also PreparedStatementSetter and RowMapper for two popular alternative callback interfaces. Can be used within a service implementation via direct instantiation with a DataSource reference, or get prepared in an application context and given to services as bean reference. Note: The DataSource should always be configured as a bean in the application context, in the first case given to the service directly, in the second case to the prepared template. Because this class is parameterizable by the callback interfaces and the org.springframework.jdbc.support.SQLExceptionTranslator interface, there should be no need to subclass it. All SQL operations performed by this class are logged at debug level, using &quot;org.springframework.jdbc.core.JdbcTemplate&quot; as log category. NOTE: An instance of this class is thread-safe once configured." />
      <item value="Return the contained value, if present, otherwise throw an exception to be created by the provided supplier. 形参: exceptionSupplier – The supplier which will return the exception to be thrown 返回值: the present value 抛出: X – if there is no value present NullPointerException – if no value is present and exceptionSupplier is null API 说明: A method reference to the exception constructor with an empty argument list can be used as the supplier. For example, IllegalStateException::new" />
      <item value="A report with javax.tools.Diagnostic.Kind.ERROR will be created for the given issue, causing the compilation to fail." />
      <item value="Policy for reporting issues occurring during the generation of a mapper implementation." />
      <item value="e" />
      <item value="Indicates that the persistence provider must assign primary keys for the entity using a database identity column." />
      <item value="Indicates that the persistence provider should pick an appropriate strategy for the particular database. The AUTO generation strategy may expect a database resource to exist, or it may attempt to create one. A vendor may provide documentation on how to create such resources in the event that it does not support schema generation or cannot create the schema resource at runtime." />
      <item value="Abstract adapter class for the AsyncHandlerInterceptor interface, for simplified implementation of pre-onlypost-only interceptors. 已弃用 as of 5.3 in favor of implementing HandlerInterceptor andor AsyncHandlerInterceptor directly. 自: 05.12.2003 作者: Juergen Hoeller" />
      <item value="Whether the browser should send credentials, such as cookies along with cross domain requests, to the annotated endpoint. The configured value is set on the Access-Control-Allow-Credentials response header of preflight requests. NOTE: Be aware that this option establishes a high level of trust with the configured domains and also increases the surface attack of the web application by exposing sensitive user-specific information such as cookies and CSRF tokens. By default this is not set in which case the Access-Control-Allow-Credentials header is also not set and credentials are therefore not allowed." />
      <item value="The plugin reduces overall indexing time and CPU usage by using custom-built project shared indexes For more details, see the detailed instructions and documentations" />
      <item value="JetBrains Space: An all-in-one solution for software teams and projects Cover the entire software development pipeline, project and team management, and communication. Host Git repositories, review code, automate your CICD, store and publish packages, manage issues and documents, and communicate with your team in chats. Explore Space and sign up for free Connect your IDE to your organization in Space. This allows you to clone and share Git repositories, perform code reviews with merge requests, edit Automation scripts with Kotlin plugin support, track an automation job’s progress, and more." />
      <item value="Qodana: The code quality platform for your favorite CI Qodana is a code quality monitoring platform that brings into your CICD pipelines all the smart features you love in the JetBrains IDEs as well as project-level checks like clone detection and license audit. Explore Qodana The plugin provides a link between a Qodana and your project opened in an IDE: Open Qodana static analysis SARIF report and view the issues detected by a Qodana linter Use the &quot;Open in IDE&quot; functionality provided by the Qodana UI" />
      <item value="Intelligent spelling and grammar checks for any text you write in the IDE. Supports over 20 languages, including English, German, Russian, and Chinese. English is enabled by default. To add other languages, open SettingsPreferences | Editor | Natural Languages. Works with natural languages in programming language constructs (Python, Java, and others), markup languages (Markdown, HTML, XML, and others), comments, and commit messages. Uses LanguageTool as its proofreading engine. Data privacy: all verification is performed locally, inside your IDE." />
      <item value="Provides base features for Java EEJakarta EE technologies: artifacts, dedicated tool window and project templates." />
      <item value="Provides a possibility to evaluate XPath expressions against any XML document opened in IDEA. It can also generate and show an XPath expression that matches the current node. Adds syntax highlighting, analysis, completion, navigation and refactoring of XPath expressions and named templates for XSLT documents." />
      <item value="Constructs a Time object using a milliseconds time value. 形参: time – milliseconds since January 1, 1970, 00:00:00 GMT; a negative number is milliseconds before January 1, 1970, 00:00:00 GMT" />
      <item value="Returns, if this stream is ordered, a stream consisting of the remaining elements of this stream after dropping the longest prefix of elements that match the given predicate. Otherwise returns, if this stream is unordered, a stream consisting of the remaining elements of this stream after dropping a subset of elements that match the given predicate. If this stream is ordered then the longest prefix is a contiguous sequence of elements of this stream that match the given predicate. The first element of the sequence is the first element of this stream, and the element immediately following the last element of the sequence does not match the given predicate. If this stream is unordered, and some (but not all) elements of this stream match the given predicate, then the behavior of this operation is nondeterministic; it is free to drop any subset of matching elements (which includes the empty set). Independent of whether this stream is ordered or unordered if all elements of this stream match the given predicate then this operation drops all elements (the result is an empty stream), or if no elements of the stream match the given predicate then no elements are dropped (the result is the same as the input)." />
      <item value="The custom pattern to use to format the field or method parameter. Defaults to empty String, indicating no custom pattern String has been specified. Set this attribute when you wish to format your field or method parameter in accordance with a custom date time pattern not represented by a style or ISO format. Note: This pattern follows the original java.text.SimpleDateFormat style, as also supported by Joda-Time, with strict parsing semantics towards overflows (e.g. rejecting a Feb 29 value for a non-leap-year). As a consequence, 'yy' characters indicate a year in the traditional style, not a &quot;year-of-era&quot; as in the java.time.format.DateTimeFormatter specification (i.e. 'yy' turns into 'uu' when going through a DateTimeFormatter with strict resolution mode)." />
      <item value="The annotated element has to be in the appropriate range. Apply on numeric values or string representation of the numeric value." />
      <item value="Note that double and float are not supported due to rounding errors (some providers might provide some approximative support)." />
      <item value="The annotated element must be a number whose value must be higher or equal to the specified minimum. Supported types are: BigDecimal BigInteger byte, short, int, long, and their respective wrappers Note that double and float are not supported due to rounding errors (some providers might provide some approximative support). null elements are considered valid. 作者: Emmanuel Bernard" />
      <item value="Marks a property, method parameter or method return type for validation cascading. Constraints defined on the object and its properties are validated when the property, method parameter or method return type is validated." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="105" />
        <entry key="ENGLISH" value="105" />
        <entry key="ALBANIAN" value="1" />
        <entry key="PORTUGUESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1658135623053" />
  </component>
</application>
<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="393" />
    <option name="newTranslationDialogWidth" value="885" />
    <option name="newTranslationDialogX" value="516" />
    <option name="newTranslationDialogY" value="313" />
    <histories>
      <item value="Specifies the time, in seconds, between client requests before the servlet container will invalidate this session. A zero or negative time indicates that the session should never timeout." />
      <item value="Specifies the time, in seconds, between client requests before the servlet container will invalidate this session. A zero or negative time indicates that the session should never timeout. 形参: interval – An integer specifying the number of seconds" />
      <item value="This feature is available only with commercial subscription. This exception occurs when your JPA entities cannot be mapped to the database tables and fields properly. JPA Buddy provides an extremely useful feature that can easily resolve this issue. Generate DDL to fill up the difference between JPA entities and the database right from the stack trace! Then check the resulting script, run it and start the application again. The same issue could be solved by setting the ddl-auto or hbm2ddl properties to regenerate the database or update it. However, this solution has signigicant limitations. Follow the video below to learn about these limitations and better solution proposed by JPA Buddy. Watch this short video to see the feature in action. You have the following options to enable paid features right now: If you haven't requested a 30-day trial before, you can get it right now and try this functionality for free. Follow this link to learn more about getting trial. If you already used the trial, you can purchase the subscription. Find the step-by-step purchase guide in our documentation. If you are a student or a teacher and want to use JPA Buddy for academic purposes, see how to get a free license. There are a few options to get a promo for free use after the trial. Learn about them here." />
      <item value="Sorts the specified array into ascending numerical order. Implementation note: The sorting algorithm is a Dual-Pivot Quicksort by Vladimir Yaroslavskiy, Jon Bentley, and Joshua Bloch. This algorithm offers O(n log(n)) performance on many data sets that cause other quicksorts to degrade to quadratic performance, and is typically faster than traditional (one-pivot) Quicksort implementations. 形参: a – the array to be sorted" />
      <item value="Sorting methods. Note that all public &quot;sort&quot; methods take the same form: Performing argument checks if necessary, and then expanding arguments into those required for the internal implementation methods residing in other package-private classes (except for legacyMergeSort, included in this class)." />
      <item value="@SneakyThrow will avoid javac's insistence that you either catch or throw onward any checked exceptions that statements in your method body declare they generate. @SneakyThrow does not silently swallow, wrap into RuntimeException, or otherwise modify any exceptions of the listed checked exception types. The JVM does not check for the consistency of the checked exception system; javac does, and this annotation lets you opt out of its mechanism. Complete documentation is found at the project lombok features page for @SneakyThrows ." />
      <item value="Add the given JobDetail to the Scheduler, and associate the given Trigger with it. If the given Trigger does not reference any Job, then it will be set to reference the Job passed with it into this method." />
      <item value="the value 0 if the argument Date is equal to this Date; a value less than 0 if this Date is before the Date argument; and a value greater than 0 if this Date is after the Date argument." />
      <item value="Creates a string representation of this Date object in an implementation-dependent form. The intent is that the form should be familiar to the user of the Java application, wherever it may happen to be running. The intent is comparable to that of the &quot;%c&quot; format supported by the strftime() function of ISO C. 已弃用 As of JDK version 1.1, replaced by DateFormat.format(Date date). 返回值: a string representation of this date, using the locale conventions." />
      <item value="Create an array-valued selection item" />
      <item value="Defines a special count query that shall be used for pagination queries to lookup the total number of elements for a page. If none is configured we will derive the count query from the original query or countProjection() query if any." />
      <item value="Defines the projection part of the count query that is generated for pagination. If neither countQuery() nor countProjection() is configured we will derive the count query from the original query." />
      <item value="Adds modifiers to each field in the type with this annotation. Complete documentation is found at the project lombok features page for @FieldDefaults . If makeFinal is true, then each (instance) field that is not annotated with @NonFinal will have the final modifier added. If level is set, then each (instance) field that is package private (i.e. no access modifier) and does not have the @PackagePrivate annotation will have the appropriate access level modifier added." />
      <item value="Generates a lot of code which fits with a class that is a representation of an immutable entity. Equivalent to @Getter @FieldDefaults(makeFinal=true, level=AccessLevel.PRIVATE) @AllArgsConstructor @ToString @EqualsAndHashCode." />
      <item value="Specifies a single-valued association to another entity class that has many-to-one multiplicity. It is not normally necessary to specify the target entity explicitly since it can usually be inferred from the type of the object being referenced. If the relationship is bidirectional, the non-owning OneToMany entity side must used the mappedBy element to specify the relationship field or property of the entity that is the owner of the relationship. The ManyToOne annotation may be used within an embeddable class to specify a relationship from the embeddable class to an entity class. If the relationship is bidirectional, the non-owning OneToMany entity side must use the mappedBy element of the OneToMany annotation to specify the relationship field or property of the embeddable field or property on the owning side of the relationship. The dot (&quot;.&quot;) notation syntax must be used in the mappedBy element to indicate the relationship attribute within the embedded attribute. The value of each identifier used with the dot notation is the name of the respective embedded field or property." />
      <item value="@Data' is only supported on a class type" />
      <item value="the value 0 if the argument string is equal to this string; a value less than 0 if this string is lexicographically less than the string argument; and a value greater than 0 if this string is lexicographically greater than the string argument." />
      <item value="Compares two strings lexicographically. The comparison is based on the Unicode value of each character in the strings. The character sequence represented by this String object is compared lexicographically to the character sequence represented by the argument string. The result is a negative integer if this String object lexicographically precedes the argument string. The result is a positive integer if this String object lexicographically follows the argument string. The result is zero if the strings are equal; compareTo returns 0 exactly when the equals(Object) method would return true. This is the definition of lexicographic ordering. If two strings are different, then either they have different characters at some index that is a valid index for both strings, or their lengths are different, or both. If they have different characters at one or more index positions, let k be the smallest such index; then the string whose character at position k has the smaller value, as determined by using the &lt; operator, lexicographically precedes the other string. In this case, compareTo returns the difference of the two character values at position k in the two string -- that is, the value: this.charAt(k)-anotherString.charAt(k) If there is no index position at which they differ, then the shorter string lexicographically precedes the longer string. In this case, compareTo returns the difference of the lengths of the strings -- that is, the value: this.length()-anotherString.length()" />
      <item value="Sorts this list according to the order induced by the specified Comparator. All elements in this list must be mutually comparable using the specified comparator (that is, c.compare(e1, e2) must not throw a ClassCastException for any elements e1 and e2 in the list). If the specified comparator is null then all elements in this list must implement the Comparable interface and the elements' natural ordering should be used. This list must be modifiable, but need not be resizable." />
      <item value="Accepts a function that extracts a Comparable sort key from a type T, and returns a Comparator&lt;T&gt; that compares by that sort key. The returned comparator is serializable if the specified function is also serializable." />
      <item value="Returns a stream consisting of the elements of this stream, sorted according to natural order. If the elements of this stream are not Comparable, a java.lang.ClassCastException may be thrown when the terminal operation is executed. For ordered streams, the sort is stable. For unordered streams, no stability guarantees are made." />
      <item value="fromIndex – low endpoint (inclusive) of the subList toIndex – high endpoint (exclusive) of the subList" />
      <item value="Returns a view of the portion of this list between the specified fromIndex, inclusive, and toIndex, exclusive. (If fromIndex and toIndex are equal, the returned list is empty.) The returned list is backed by this list, so non-structural changes in the returned list are reflected in this list, and vice-versa. The returned list supports all of the optional list operations supported by this list. This method eliminates the need for explicit range operations (of the sort that commonly exist for arrays). Any operation that expects a list can be used as a range operation by passing a subList view instead of a whole list. For example, the following idiom removes a range of elements from a list: list.subList(from, to).clear(); Similar idioms may be constructed for indexOf and lastIndexOf, and all of the algorithms in the Collections class can be applied to a subList. The semantics of the list returned by this method become undefined if the backing list (i.e., this list) is structurally modified in any way other than via the returned list. (Structural modifications are those that change the size of this list, or otherwise perturb it in such a fashion that iterations in progress may yield incorrect results.)" />
      <item value="Creates a string representation of this Date object in an implementation-dependent form. The intent is that the form should be familiar to the user of the Java application, wherever it may happen to be running. The intent is comparable to that of the &quot;%c&quot; format supported by the strftime() function of ISO C." />
      <item value="Resolve the contextual reference for the given key, if any. At a minimum: the HttpServletRequest reference for key &quot;request&quot;, and the HttpSession reference for key &quot;session&quot;. 形参: key – the contextual key 返回值: the corresponding object, or null if none found" />
      <item value="Returns an Optional describing the specified value, if non-null, otherwise returns an empty Optional." />
      <item value="Generates a no-args constructor. Will generate an error message if such a constructor cannot be written due to the existence of final fields. Complete documentation is found at the project lombok features page for @Constructor . Even though it is not listed, this annotation also has the onConstructor parameter. See the full documentation for more details. NB: Fields with constraints such as @NonNull will NOT be checked in a @NoArgsConstructor constructor, of course!" />
      <item value="小数位" />
      <item value="Whether or not the Job should remain stored after it is orphaned (no Triggers point to it). If not explicitly set, the default value is false - this method sets the value to true." />
      <item value="This annotation may be used on a field or parameter as a qualifier for candidate beans when autowiring. It may also be used to annotate other custom annotations that can then in turn be used as qualifiers." />
      <item value="Indicates that a bean should be given preference when multiple candidates are qualified to autowire a single-valued dependency. If exactly one 'primary' bean exists among the candidates, it will be the autowired value. This annotation is semantically equivalent to the &lt;bean&gt; element's primary attribute in Spring XML. May be used on any class directly or indirectly annotated with @Component or on methods annotated with @Bean." />
      <item value="Create a predicate to test whether the expression is a member of the argument list." />
      <item value="This annotation must be specified for persistent fields or properties of type java.util.Date and java.util.Calendar. It may only be specified for fields or properties of these types. The Temporal annotation may be used in conjunction with the Basic annotation, the Id annotation, or the ElementCollection annotation (when the element collection value is of such a temporal type." />
      <item value="Returns a copy of this LocalDateTime with the day-of-month altered. If the resulting date-time is invalid, an exception is thrown. The time does not affect the calculation and will be the same in the result. This instance is immutable and unaffected by this method call." />
      <item value="Returns a stream consisting of the results of applying the given function to the elements of this stream." />
      <item value="Deletes the file or directory denoted by this abstract pathname. If this pathname denotes a directory, then the directory must be empty in order to be deleted. Note that the java.nio.file.Files class defines the delete method to throw an IOException when a file cannot be deleted. This is useful for error reporting and to diagnose why a file cannot be deleted." />
      <item value="Copy the property values of the given source bean into the target bean. Note: The source and target classes do not have to match or even be derived from each other, as long as the properties match. Any bean properties that the source bean exposes but the target bean does not will silently be ignored. This is just a convenience method. For more complex transfer needs, consider using a full BeanWrapper. 形参: source – the source bean target – the target bean 抛出: BeansException – if the copying failed" />
      <item value="Requires the currently executing Subject to have all of the specified roles. If they do not have the role(s), the method will not be executed and an AuthorizationException is thrown. For example, @RequiresRoles(&quot;aRoleName&quot;); void someMethod(); means someMethod() could only be executed by subjects who have been assigned the 'aRoleName' role. Usage Note: Be careful using this annotation if your application has a dynamic security model where roles can be added and deleted at runtime. If your application allowed the annotated role to be deleted during runtime, the method would not be able to be executed by anyone (at least until a new role with the same name was created again). If you require such dynamic functionality, only the RequiresPermissions annotation makes sense - Permission types will not change during runtime for an application since permissions directly correspond to how the application's functionality is programmed (that is, they reflect the application's functionality only, not who is executing the the functionality)." />
      <item value="Reads up to b.length bytes of data from this input stream into an array of bytes. This method blocks until some input is available." />
      <item value="Returns the credentials associated with the corresponding Subject. A credential verifies one or more of the principals associated with the Subject, such as a password or private key. Credentials are used by Shiro particularly during the authentication process to ensure that submitted credentials during a login attempt match exactly the credentials here in the AuthenticationInfo instance. 返回值: the credentials associated with the corresponding Subject." />
      <item value="Indicates a query method should be considered as modifying query as that changes the way it needs to be executed. This annotation is only considered if used on query methods defined through a Query annotation. It's not applied on custom implementation methods or queries derived from the method name as they already have control over the underlying data access APIs or specify if they are modifying by their name. Queries that require a `@Modifying` annotation include INSERT, UPDATE, DELETE, and DDL statements." />
      <item value="Specify the selection items that are to be returned in the query result. Replaces the previously specified selection(s), if any. The type of the result of the query execution depends on the specification of the type of the criteria query object created as well as the arguments to the multiselect method. &lt;p&gt; An argument to the multiselect method must not be a tuple- or array-valued compound selection item. &lt;p&gt;The semantics of this method are as follows: &lt;ul&gt; &lt;li&gt; If the type of the criteria query is &lt;code&gt;CriteriaQuery&amp;060;Tuple&amp;062;&lt;code&gt; (i.e., a criteria query object created by either the &lt;code&gt;createTupleQuery&lt;code&gt; method or by passing a &lt;code&gt;Tuple&lt;code&gt; class argument to the &lt;code&gt;createQuery&lt;code&gt; method), a &lt;code&gt;Tuple&lt;code&gt; object corresponding to the arguments of the &lt;code&gt;multiselect&lt;code&gt; method, in the specified order, will be instantiated and returned for each row that results from the query execution. &lt;li&gt; If the type of the criteria query is &lt;code&gt;CriteriaQuery&amp;060;X&amp;062;&lt;code&gt; for some user-defined class X (i.e., a criteria query object created by passing a X class argument to the &lt;code&gt;createQuery&lt;code&gt; method), the arguments to the &lt;code&gt;multiselect&lt;code&gt; method will be passed to the X constructor and an instance of type X will be returned for each row. &lt;li&gt; If the type of the criteria query is &lt;code&gt;CriteriaQuery&amp;060;X[]&amp;062;&lt;code&gt; for some class X, an instance of type X[] will be returned for each row. The elements of the array will correspond to the arguments of the &lt;code&gt;multiselect&lt;code&gt; method, in the specified order. &lt;li&gt; If the type of the criteria query is &lt;code&gt;CriteriaQuery&amp;060;Object&amp;062;&lt;code&gt; or if the criteria query was created without specifying a type, and only a single argument is passed to the &lt;code&gt;multiselect&lt;code&gt; method, an instance of type &lt;code&gt;Object&lt;code&gt; will be returned for each row. &lt;li&gt; If the type of the criteria query is &lt;code&gt;CriteriaQuery&amp;060;Object&amp;062;&lt;code&gt; or if the criteria query was created without specifying a type, and more than one argument is passed to the &lt;code&gt;multiselect&lt;code&gt; method, an instance of type &lt;code&gt;Object[]&lt;code&gt; will be instantiated and returned for each row. The elements of the array will correspond to the arguments to the &lt;code&gt; multiselect&lt;code&gt; method, in the specified order." />
      <item value="Specify the selection items that are to be returned in the query result. Replaces the previously specified selection(s), if any. The type of the result of the query execution depends on the specification of the type of the criteria query object created as well as the arguments to the multiselect method. &lt;p&gt; An argument to the multiselect method must not be a tuple- or array-valued compound selection item." />
      <item value="Specify the item that is to be returned in the query result. Replaces the previously specified selection(s), if any. Note: Applications using the string-based API may need to specify the type of the select item when it results from a get or join operation and the query result type is specified." />
      <item value="The maximum number of results the query object was set to retrieve. Returns Integer.MAX_VALUE if setMaxResults was not applied to the query object." />
      <item value="Set the maximum number of results to retrieve" />
      <item value="Remove the indicated Trigger from the scheduler. If the related job does not have any other triggers, and the job is not durable, then the job will also be deleted." />
      <item value="Set the time the Trigger should start at to the current moment - the trigger may or may not fire at this time - depending upon the schedule configured for the Trigger." />
      <item value="Set the time the Trigger should start at - the trigger may or may not fire at this time - depending upon the schedule configured for the Trigger. However the Trigger will NOT fire before this time, regardless of the Trigger's schedule. 形参: triggerStartTime – the start time for the Trigger." />
      <item value="A constant Trigger group name used internally by the scheduler - clients should not use the value of this constant (&quot;FAILED_OVER_JOBS&quot;) for the name of a Trigger's group." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="130" />
        <entry key="ENGLISH" value="130" />
        <entry key="ALBANIAN" value="1" />
        <entry key="PORTUGUESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1663838589948" />
  </component>
</application>